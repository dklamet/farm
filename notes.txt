1a.  Correctness of (simple) counts of GPS can be verified with the provided counts.sh script
1b.  That CAN messages/sec is almost the same as CAN messages/GPS message indicates that these are
    likely correct since GPS messages (in this data set) occur 1/sec.
1c
Writing a perl script to give a separate stats would give an INDICATION that this 
program is correct for this data set, but not absolute proof that it is correct for any dataset
or even this data set.

2. printf's used for simple formatted output.

3. Could have used Boost more, but have limited experience with it.

4. Would normally have split program into multiple files by class.

5. Run time in HH:MM:SS, no support for days

6. unsigned int, even on a 32-bit system,is large enough to store needed elements.

7. Additional compiler warnings should be turned on in Makefile

8. Less than ideal mix of C library calls.

9. Did not have time to add instrumentation which I normally do as a Loggable class. Classes
   which must record information are derived from that class and it's functions (aka as simple as
   logPrint(...) are callable.

10. Performance is not very good for the simple logic.   Or I'd just use a profiler and see what 
    it indicated.  Object instantion and the performance of Boost::Tokenizer seem like prime 
    candidates





